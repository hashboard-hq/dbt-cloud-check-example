name: Webhook Triggered Action

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  wait_for_dbt_cloud_status:
    runs-on: ubuntu-latest
    steps:
      - name: Query GitHub API for Status
        id: get_status
        run: |
          SHA="${{ github.event.pull_request.sha }}"
          API_URL="https://api.github.com/repos/hashboard-hq/dbt-cloud-check-example/statuses/${SHA}"

          # Query the API and loop until the status is not 'pending'
          while :; do
            echo "Checking status for SHA: $SHA"
            response=$(curl -s $API_URL)
            state=$(echo "$response" | jq -r '.[0].state')
            if [ "$state" != "pending" ]; then
              echo "Final state: $state"
              break
            fi
            echo "Status is still pending, waiting..."
            sleep 10  # Wait before re-checking
          done

          # If the state is not 'success', exit with error
          if [ "$state" != "success" ]; then
            echo "Status is not successful: $state"
            exit 1
          fi

          # Extract the job ID from the target URL
          job_id=$(echo "$response" | jq -r '.[0].target_url' | grep -oP '\d+(?=/$)')

          echo "Status is successful, Job ID is: $job_id"

          # Set the job ID as an output for downstream steps
          echo "::set-output name=JOB_ID::$job_id"

  # Downstream job to use the JOB_ID
  use_job_id:
    runs-on: ubuntu-latest
    needs: wait_for_dbt_cloud_status
    steps:
      - name: Use JOB_ID
        run: |
          echo "The JOB_ID is ${{ needs.wait_for_dbt_cloud_status.outputs.JOB_ID }}"
